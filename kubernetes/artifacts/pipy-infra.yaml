apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: pipy-infra
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: pipy-infra/serving-cert-pifr
    controller-gen.kubebuilder.io/version: v0.7.0
  name: infraconfigurations.flomesh.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: webhook-service-pifr
          namespace: pipy-infra
          path: /convert
      conversionReviewVersions:
      - v1
  group: flomesh.io
  names:
    kind: InfraConfiguration
    listKind: InfraConfigurationList
    plural: infraconfigurations
    singular: infraconfiguration
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: InfraConfiguration is the Schema for the infraconfigurations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InfraConfigurationSpec defines the desired state of InfraConfiguration
            properties:
              foo:
                description: Foo is an example field of InfraConfiguration. Edit infraconfiguration_types.go to remove/update
                type: string
            type: object
          status:
            description: InfraConfigurationStatus defines the observed state of InfraConfiguration
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pipy-infra-pifr
  namespace: pipy-infra
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pipy-infra-leader-election-role-pifr
  namespace: pipy-infra
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: pipy-infra-role-pifr
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - flomesh.io
  resources:
  - infraconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - flomesh.io
  resources:
  - infraconfigurations/finalizers
  verbs:
  - update
- apiGroups:
  - flomesh.io
  resources:
  - infraconfigurations/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pipy-infra-leader-election-rolebinding-pifr
  namespace: pipy-infra
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pipy-infra-leader-election-role-pifr
subjects:
- kind: ServiceAccount
  name: pipy-infra-pifr
  namespace: pipy-infra
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pipy-infra-manager-rolebinding-pifr
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pipy-infra-role-pifr
subjects:
- kind: ServiceAccount
  name: pipy-infra-pifr
  namespace: pipy-infra
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 07b6e295.flomesh.io
kind: ConfigMap
metadata:
  name: manager-config-pifr
  namespace: pipy-infra
---
apiVersion: v1
kind: Service
metadata:
  name: pipy-repo-service-pifr
  namespace: pipy-infra
spec:
  ports:
  - port: 6060
    protocol: TCP
    targetPort: 6060
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: webhook-service-pifr
  namespace: pipy-infra
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: controller-manager-pifr
  namespace: pipy-infra
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - command:
        - sh
        - -c
        - |
          /usr/local/bin/pipy --admin-port=6060
        image: flomesh/pipy-pjs:0.4.0-224
        name: repo
        ports:
        - containerPort: 6060
          name: repo
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20M
      - args:
        - --config=controller_manager_config.yaml
        command:
        - /manager
        image: flomesh/pipy-infra-manager:0.0.14
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /controller_manager_config.yaml
          name: manager-config
          subPath: controller_manager_config.yaml
      serviceAccountName: pipy-infra-pifr
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      - configMap:
          name: manager-config-pifr
        name: manager-config
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: serving-cert-pifr
  namespace: pipy-infra
spec:
  dnsNames:
  - webhook-service-pifr.pipy-infra.svc
  - webhook-service-pifr.pipy-infra.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: selfsigned-issuer-pifr
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: selfsigned-issuer-pifr
  namespace: pipy-infra
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: pipy-infra/serving-cert-pifr
  name: mutating-webhook-configuration-pifr
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: webhook-service-pifr
      namespace: pipy-infra
      path: /mutate-flomesh-io-v1alpha1-infraconfiguration
  failurePolicy: Fail
  name: minfraconfiguration.kb.flomesh.io
  rules:
  - apiGroups:
    - flomesh.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - infraconfigurations
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: pipy-infra/serving-cert-pifr
  name: validating-webhook-configuration-pifr
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: webhook-service-pifr
      namespace: pipy-infra
      path: /validate-flomesh-io-v1alpha1-infraconfiguration
  failurePolicy: Fail
  name: vinfraconfiguration.kb.flomesh.io
  rules:
  - apiGroups:
    - flomesh.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - infraconfigurations
  sideEffects: None
