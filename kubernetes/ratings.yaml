apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: samples-bookinfo-ratings
  name: samples-bookinfo-ratings
spec:
  replicas: 1
  selector:
    matchLabels:
      app: samples-bookinfo-ratings
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: samples-bookinfo-ratings
    spec:
      containers:
      # - image: docker.io/addozhang/pipy-infra:latest
      # - image: docker.io/flomesh/pipy-node:0.4.0-205
      #   imagePullPolicy: Always
      #   name: infra
      #   resources: {}   
      #   readinessProbe:
      #     initialDelaySeconds: 5
      #     periodSeconds: 2
      #     successThreshold: 1
      #     failureThreshold: 30
      #     httpGet:
      #       port: 8771
      #       path: /actuator/health # means script pulled
      - image: flomesh/samples-bookinfo-ratings:latest
        name: app
        imagePullPolicy: IfNotPresent
        env:
        - name: K8S_SAMPLES_DISCOVERY_SERVER_HOSTNAME
          value: 127.0.0.1
        - name: K8S_SAMPLES_DISCOVERY_SERVER_PORT
          value: '8771'
        - name: eureka.client.enabled
          value: 'false'
        - name: eureka.client.enabled
          value: 'false'
        - name: spring.cloud.config.discovery.enabled
          value: 'false'
        - name: spring.cloud.config.uri
          value: 'http://samples-config-service:8888'          
        - name: spring.application.name
          value: 'bookinfo-ratings'
        ports:
        - containerPort: 8101
        resources: {}
        lifecycle:
          preStop:
            httpGet:
              host: localhost
              port: 8762
              path: /deregister
status: {}
